version: 2.1

jobs:
  lint:
    resource_class: small
    docker:
      - image: circleci/node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: all-npm-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: "npm i -D"
      - save_cache:
          key: all-npm-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: lint scripts
          command: "npm run lint"
      - run:
          name: lint styles
          command: "npm run lint:style"
  test:
    resource_class: large
    docker:
      - image: circleci/node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: all-npm-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: "npm i"
      - save_cache:
          key: all-npm-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests
          command: "npm run test:unit:ci"
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
  deploy_hosting:
    resource_class: large
    docker:
      - image: circleci/node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: all-npm-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: "npm i"
      - save_cache:
          key: all-npm-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build web app
          command: npm run build
      - run:
          name: checkout functions
          command: cd functions
      - restore_cache:
          key: functions-npm-{{ checksum "package.json" }}
      - run:
          name: Install function dependencies
          command: npm i
      - save_cache:
          key: functions-npm-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: build functions
          command: npm run build
      - run:
          name: Back to root
          command: cd ..
      - run:
          name: deploy to firebase
          command: ./node_modules/.bin/firebase deploy --non-interactive --token "$FIREBASE_DEPLOY_TOKEN"

workflows:
  deploy:
    jobs:
      - lint
      - test:
          requires:
            - lint
      - deploy_hosting:
          requires:
            - test
          filters:
            branches:
              only:
                - master
